---
interface Props {
    currentPage: number;
    totalPages: number;
    baseUrl: string; // Base URL for pagination links (e.g., "/", "/category/motion-graphics")
}

const { currentPage, totalPages, baseUrl } = Astro.props;

// Calculate which pages to show
const getVisiblePages = (current: number, total: number) => {
    const pages: (number | string)[] = [];
    
    if (total <= 7) {
        // Show all pages if total is 7 or less
        for (let i = 1; i <= total; i++) {
            pages.push(i);
        }
    } else {
        // Always show first page
        pages.push(1);
        
        if (current > 4) {
            pages.push('...');
        }
        
        // Show pages around current page
        const start = Math.max(2, current - 1);
        const end = Math.min(total - 1, current + 1);
        
        for (let i = start; i <= end; i++) {
            if (i !== 1 && i !== total) {
                pages.push(i);
            }
        }
        
        if (current < total - 3) {
            pages.push('...');
        }
        
        // Always show last page if total > 1
        if (total > 1) {
            pages.push(total);
        }
    }
    
    return pages;
};

const visiblePages = getVisiblePages(currentPage, totalPages);

// Helper function to generate page URL
const getPageUrl = (page: number) => {
    if (page === 1) {
        return baseUrl === "/" ? "/" : baseUrl;
    }
    return baseUrl === "/" ? `/page/${page}` : `${baseUrl}/page/${page}`;
};
---

{totalPages > 1 && (
    <div class="text-center mt-16">
        <nav class="flex flex-wrap justify-center items-center gap-2" aria-label="Pagination">
            <!-- Previous Button -->
            {currentPage > 1 && (
                <a
                    href={getPageUrl(currentPage - 1)}
                    class="px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 bg-white text-gray-700 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 flex items-center"
                    aria-label="Previous page"
                >
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                    Previous
                </a>
            )}
            
            <!-- Page Numbers -->
            {visiblePages.map((page) => {
                if (page === '...') {
                    return (
                        <span class="px-3 py-2 text-gray-500">...</span>
                    );
                }
                
                const pageNum = page as number;
                const isActive = pageNum === currentPage;
                
                return (
                    <a
                        href={getPageUrl(pageNum)}
                        class={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${
                            isActive
                                ? "bg-gray-900 text-white shadow-lg"
                                : "bg-white text-gray-700 hover:bg-gray-100 border border-gray-200 hover:border-gray-300"
                        }`}
                        aria-label={`Page ${pageNum}`}
                        aria-current={isActive ? "page" : undefined}
                    >
                        {pageNum}
                    </a>
                );
            })}
            
            <!-- Next Button -->
            {currentPage < totalPages && (
                <a
                    href={getPageUrl(currentPage + 1)}
                    class="px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 bg-white text-gray-700 hover:bg-gray-100 border border-gray-200 hover:border-gray-300 flex items-center"
                    aria-label="Next page"
                >
                    Next
                    <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                </a>
            )}
        </nav>
        
        <!-- Page Info -->
        <p class="text-sm text-gray-600 mt-4">
            Page {currentPage} of {totalPages}
        </p>
    </div>
)}