---
import { getCollection, type CollectionEntry } from 'astro:content';
import { getVideosByAuthorSlug, getAllAuthors, sortVideosByDate, generateSlug } from '../../utils/videoUtils';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import VideoCard from '../../components/VideoCard.astro';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths: GetStaticPaths = async () => {
  const authors = await getAllAuthors();
  return authors.map((author: string) => ({
    params: { slug: generateSlug(author) },
    props: { author, authorSlug: generateSlug(author) },
  }));
};

interface Props {
  author: string;
  authorSlug: string;
}

const { author, authorSlug }: Props = Astro.props;

// Get videos for this author
const allVideos = await getVideosByAuthorSlug(authorSlug);
const videos = sortVideosByDate(allVideos);

// Get all authors for navigation
const allAuthors = await getAllAuthors();

// Calculate author stats
const totalVideos = videos.length;
const categories = [...new Set(videos.map(v => v.data.category))];
const tags = [...new Set(videos.flatMap(v => v.data.tags))];
---

<Layout title={`${author} - Video Portfolio | Showreel.design`}>
  <Header />
  <main>
    <!-- Hero Section -->
    <section class="py-20 bg-gray-900 text-white">
      <div class="section-container text-center">
        <!-- Breadcrumb -->
        <nav class="mb-8">
          <ol class="flex justify-center items-center space-x-2 text-sm text-gray-300">
            <li><a href="/" class="hover:text-white transition-colors">Home</a></li>
            <li class="text-gray-500">/</li>
            <li><span class="text-gray-400">Author</span></li>
            <li class="text-gray-500">/</li>
            <li class="text-white font-medium">{author}</li>
          </ol>
        </nav>
        
        <!-- Author Avatar -->
        <div class="w-24 h-24 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full mx-auto mb-6 flex items-center justify-center text-3xl font-bold">
          {author.charAt(0).toUpperCase()}
        </div>
        
        <h1 class="text-4xl md:text-6xl font-bold mb-6 leading-tight">
          {author}
        </h1>
        <p class="text-xl md:text-2xl text-gray-300 mb-8">
          Motion Designer & Video Creator
        </p>
        
        <!-- Author Stats -->
        <div class="flex justify-center gap-8 text-center">
          <div>
            <div class="text-2xl font-bold text-blue-400">{totalVideos}</div>
            <div class="text-sm text-gray-400">{totalVideos === 1 ? 'Project' : 'Projects'}</div>
          </div>
          <div>
            <div class="text-2xl font-bold text-purple-400">{categories.length}</div>
            <div class="text-sm text-gray-400">{categories.length === 1 ? 'Category' : 'Categories'}</div>
          </div>
          <div>
            <div class="text-2xl font-bold text-green-400">{tags.length}</div>
            <div class="text-sm text-gray-400">{tags.length === 1 ? 'Skill' : 'Skills'}</div>
          </div>
        </div>
      </div>
    </section>

    <!-- Author Info Section -->
    {(categories.length > 0 || tags.length > 0) && (
      <section class="py-12 bg-white border-b border-gray-200">
        <div class="section-container">
          <div class="max-w-4xl mx-auto">
            <div class="grid md:grid-cols-2 gap-8">
              <!-- Categories -->
              {categories.length > 0 && (
                <div>
                  <h3 class="text-lg font-semibold text-gray-900 mb-4">Specializes In</h3>
                  <div class="flex flex-wrap gap-2">
                    {categories.map((category: string) => (
                      <a 
                        href={`/category/${generateSlug(category)}`}
                        class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium hover:bg-blue-200 transition-colors"
                      >
                        {category}
                      </a>
                    ))}
                  </div>
                </div>
              )}
              
              <!-- Skills/Tags -->
              {tags.length > 0 && (
                <div>
                  <h3 class="text-lg font-semibold text-gray-900 mb-4">Skills & Techniques</h3>
                  <div class="flex flex-wrap gap-2">
                    {tags.slice(0, 8).map((tag: string) => (
                      <a 
                        href={`/tag/${generateSlug(tag)}`}
                        class="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm hover:bg-gray-200 transition-colors"
                      >
                        #{tag}
                      </a>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>
    )}

    <!-- Video Grid Section -->
    <section class="py-20 bg-gray-50">
      <div class="section-container">
        <!-- Section Header -->
        <div class="text-center mb-12">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">
            Portfolio by {author}
          </h2>
          <p class="text-gray-600">
            {totalVideos} {totalVideos === 1 ? 'project' : 'projects'} showcasing creative excellence
          </p>
        </div>

        <!-- Other Authors -->
        <div class="mb-12">
          <h3 class="text-lg font-semibold text-gray-900 mb-4 text-center">Other Creators</h3>
          <div class="flex flex-wrap justify-center gap-2">
            {allAuthors.filter(a => a !== author).slice(0, 6).map((a: string) => (
              <a 
                href={`/author/${generateSlug(a)}`}
                class="px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-white text-gray-700 hover:bg-gray-100 border border-gray-200 hover:border-gray-300"
              >
                {a}
              </a>
            ))}
            
            <!-- Back to All -->
            <a 
              href="/" 
              class="px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 bg-gray-900 text-white hover:bg-gray-800"
            >
              All Work
            </a>
          </div>
        </div>

        <!-- Video Grid -->
        <div class="video-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {videos.map((video: any, index: number) => (
            <VideoCard
              title={video.data.title}
              author={video.data.author}
              thumbnail={video.data.thumbnail}
              videoUrl={video.data.videoUrl}
              category={video.data.category}
              slug={video.slug}
            />
          ))}
        </div>

        <!-- Empty State -->
        {videos.length === 0 && (
          <div class="text-center py-16">
            <div class="text-gray-400 text-6xl mb-4">ðŸ‘¤</div>
            <h3 class="text-2xl font-bold text-gray-900 mb-2">No videos found</h3>
            <p class="text-gray-600 mb-8">There are no videos by <strong>{author}</strong> yet.</p>
            <a href="/" class="btn-primary">
              Browse All Videos
            </a>
          </div>
        )}

        <!-- Load More Button -->
        {videos.length > 6 && (
          <div class="text-center mt-16">
            <button class="btn-secondary">
              Load More Projects
              <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
              </svg>
            </button>
          </div>
        )}
      </div>
    </section>
  </main>
</Layout>

<script>
  // Import grid actions for interactive animations
  import '../../scripts/gridActions.js';
</script>