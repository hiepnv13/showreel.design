---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import { getAllCategories, getAllAuthors } from "../utils/videoUtils";

// Get all categories and authors for dropdown
const categories = await getAllCategories();
const authors = await getAllAuthors();
---

<Layout title="Upload Video - Showreel.design">
    <Header />
    <main>
        <!-- Hero Section -->
        <section class="py-20 bg-gray-900 text-white">
            <div class="section-container text-center">
                <h1 class="text-4xl md:text-6xl font-bold mb-6 leading-tight">
                    Upload New Video
                </h1>
                <p class="text-xl md:text-2xl text-gray-300 mb-8">
                    Create a new video post with all the details
                </p>
            </div>
        </section>

        <!-- Upload Form -->
        <section class="py-20 bg-gray-50">
            <div class="section-container max-w-4xl mx-auto">
                <form id="uploadForm" class="bg-white rounded-lg shadow-lg p-8">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Title -->
                        <div class="md:col-span-2">
                            <label for="title" class="block text-sm font-medium text-gray-700 mb-2">
                                Title *
                            </label>
                            <input
                                type="text"
                                id="title"
                                name="title"
                                required
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Enter video title"
                            />
                        </div>

                        <!-- Author -->
                        <div>
                            <label for="author" class="block text-sm font-medium text-gray-700 mb-2">
                                Author *
                            </label>
                            <input
                                type="text"
                                id="author"
                                name="author"
                                list="authorList"
                                required
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Select or enter author name"
                            />
                            <datalist id="authorList">
                                {authors.map((author) => (
                                    <option value={author}>{author}</option>
                                ))}
                            </datalist>
                        </div>

                        <!-- Video File Name -->
                        <div>
                            <label for="videoFileName" class="block text-sm font-medium text-gray-700 mb-2">
                                Video File Name *
                            </label>
                            <input
                                type="text"
                                id="videoFileName"
                                name="videoFileName"
                                required
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="video-file.mp4"
                            />
                        </div>

                        <!-- Category -->
                        <div>
                            <label for="category" class="block text-sm font-medium text-gray-700 mb-2">
                                Category *
                            </label>
                            <input
                                type="text"
                                id="category"
                                name="category"
                                list="categoryList"
                                required
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Select or enter category"
                            />
                            <datalist id="categoryList">
                                {categories.map((cat) => (
                                    <option value={cat}>{cat}</option>
                                ))}
                            </datalist>
                        </div>

                        <!-- Quality -->
                        <div>
                            <label for="quality" class="block text-sm font-medium text-gray-700 mb-2">
                                Quality
                            </label>
                            <select
                                id="quality"
                                name="quality"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            >
                                <option value="1080p">1080p</option>
                                <option value="4K">4K</option>
                                <option value="720p">720p</option>
                            </select>
                        </div>

                        <!-- Publish Date -->
                        <div>
                            <label for="publishDate" class="block text-sm font-medium text-gray-700 mb-2">
                                Publish Date *
                            </label>
                            <input
                                type="date"
                                id="publishDate"
                                name="publishDate"
                                required
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            />
                        </div>

                        <!-- Featured -->
                        <div class="flex items-center">
                            <input
                                type="checkbox"
                                id="featured"
                                name="featured"
                                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                            />
                            <label for="featured" class="ml-2 block text-sm text-gray-700">
                                Featured Video
                            </label>
                        </div>

                        <!-- Tags -->
                        <div class="md:col-span-2">
                            <label for="tags" class="block text-sm font-medium text-gray-700 mb-2">
                                Tags (comma separated)
                            </label>
                            <input
                                type="text"
                                id="tags"
                                name="tags"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="branding, animation, logo, motion"
                            />
                        </div>

                        <!-- Description -->
                        <div class="md:col-span-2">
                            <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
                                Short Description *
                            </label>
                            <textarea
                                id="description"
                                name="description"
                                required
                                rows="3"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Brief description of the video"
                            ></textarea>
                        </div>

                        <!-- Main Content -->
                        <div class="md:col-span-2">
                            <label for="content" class="block text-sm font-medium text-gray-700 mb-2">
                                Main Content
                            </label>
                            <textarea
                                id="content"
                                name="content"
                                rows="8"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Detailed description of the project, highlights, technical details, etc."
                            ></textarea>
                        </div>

                        <!-- Project Highlights -->
                        <div class="md:col-span-2">
                            <label for="highlights" class="block text-sm font-medium text-gray-700 mb-2">
                                Project Highlights (one per line)
                            </label>
                            <textarea
                                id="highlights"
                                name="highlights"
                                rows="4"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Logo Animation: Smooth, professional logo reveals\nBrand Guidelines: Animated presentation of brand elements"
                            ></textarea>
                        </div>

                        <!-- Applications -->
                        <div class="md:col-span-2">
                            <label for="applications" class="block text-sm font-medium text-gray-700 mb-2">
                                Applications (one per line)
                            </label>
                            <textarea
                                id="applications"
                                name="applications"
                                rows="4"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                placeholder="Corporate presentations\nWebsite headers\nSocial media content"
                            ></textarea>
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <div class="mt-8 text-center">
                        <button
                            type="submit"
                            class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-lg transition-colors duration-200"
                        >
                            Create Video Post
                        </button>
                    </div>
                </form>

                <!-- Success/Error Messages -->
                <div id="message" class="mt-6 text-center hidden">
                    <div id="successMessage" class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded hidden">
                        Video post created successfully!
                    </div>
                    <div id="errorMessage" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded hidden">
                        Error creating video post. Please try again.
                    </div>
                </div>
            </div>
        </section>
    </main>
</Layout>

<script>
    // Set default publish date to today
    document.addEventListener('DOMContentLoaded', function() {
        const today = new Date().toISOString().split('T')[0];
        const publishDateEl = document.getElementById('publishDate') as HTMLInputElement;
        if (publishDateEl) publishDateEl.value = today;
    });

    // Handle form submission
    document.getElementById('uploadForm')?.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this as HTMLFormElement);
        const data = Object.fromEntries(formData.entries()) as any;
        
        // Convert tags to array
        if (data.tags) {
            data.tags = (data.tags as string).split(',').map((tag: string) => tag.trim()).filter((tag: string) => tag);
        } else {
            data.tags = [];
        }
        
        // Convert featured to boolean
        data.featured = formData.has('featured');
        
        try {
            const response = await fetch('/api/create-video.json', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            
            if (response.ok) {
                (document.getElementById('successMessage') as HTMLElement)?.classList.remove('hidden');
                (document.getElementById('errorMessage') as HTMLElement)?.classList.add('hidden');
                (document.getElementById('message') as HTMLElement)?.classList.remove('hidden');
                (this as HTMLFormElement).reset();
                // Reset date to today
                const today = new Date().toISOString().split('T')[0];
                const publishDateEl = document.getElementById('publishDate') as HTMLInputElement;
                if (publishDateEl) publishDateEl.value = today;
            } else {
                throw new Error(result.error || 'Failed to create video post');
            }
        } catch (error) {
            console.error('Error:', error);
            const errorMessageEl = document.getElementById('errorMessage') as HTMLElement;
            if (errorMessageEl) {
                errorMessageEl.textContent = error instanceof Error ? error.message : 'Unknown error';
                errorMessageEl.classList.remove('hidden');
            }
            (document.getElementById('successMessage') as HTMLElement)?.classList.add('hidden');
            (document.getElementById('message') as HTMLElement)?.classList.remove('hidden');
        }
    });
</script>